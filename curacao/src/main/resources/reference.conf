## Copyright (c) 2014 Mark S. Kolich
## http://mark.koli.ch
##
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation
## files (the "Software"), to deal in the Software without
## restriction, including without limitation the rights to use,
## copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following
## conditions:
##
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
## OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
## NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
## HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
## WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
## OTHER DEALINGS IN THE SOFTWARE.

curacao {

  ## The timeout attached to any newly instantiated async context. Note that
  ## if the request is not completed within this window, an "onTimeout" error
  ## handler is invoked by the Servlet container, and handled by this library
  ## so that a default "timeout" error response is returned to the client.
  ## When dealing with asynchronous Servlet's, the "async timeout"
  ## applies to the duration between a call to startAsync() and complete().
  ## That is, if the async context is not completed within this time frame,
  ## the Servlet container fires an "onTimeout" event.
  ## Set to 0 (zero) for no timeout.
  async-context-timeout = 30s

  pools {
  
    ## Default configuration for the "request handler" thread pool.
    request {
      
      ## The size of the request handler thread pool.  Maps to how many
      ## concurrent requests this library will process concurrently.
      ## Set to 0 (zero) for an unbounded pool that will spawn as many
      ## threads as needed (dangerous unless you know what you're doing).
      size = 4
      
      ## The String.format() worthy name for each thread created and
      ## managed by this thread pool.
      name-format = "curacao-request-%s"
      
    }
    
    ## Default configuration for the "response handler" thread pool.
    response {
    
      ## The size of the request handler thread pool.  Maps to how many
      ## concurrent responses this library will process concurrently.
      ## Set to 0 (zero) for an unbounded pool that will spawn as many
      ## threads as needed (dangerous unless you know what you're doing).
      size = 4
      
      ## The String.format() worthy name for each thread created and
      ## managed by this thread pool.
      name-format = "curacao-response-%s"
      
    }
  
  }
  
  mappers {
  
    request {
    
      ## The maximum request body size this library will attempt to
      ## buffer into memory.  Default is 512kB.  Note this is ~per~ request.
      ## Set to 0 (zero) to ignore any request body size limit and attempt
      ## to buffer as much as possible into memory (dangerous).
      max-request-body-size = 512k
      
      ## According to http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7.1
      ##
      ##  When no explicit charset parameter is provided by the sender, media
      ##  subtypes of the "text" type are defined to have a default charset
      ##  value of "ISO-8859-1" when received via HTTP. Data in character sets
      ##  other than "ISO-8859-1" or its subsets MUST be labeled with an
      ##  appropriate charset value.
      ##
      ## Set this config property to the name of the default charset to use
      ## when processing requests that do not specify a character encoding.
      ## We use "UTF-8" here although the HTTP/1.1 spec says "ISO-8859-1" is
      ## the default.  However, modern applications will want "UTF-8".
      default-character-encoding-if-not-specified = "UTF-8"
    
    }
  
  }
  
}
